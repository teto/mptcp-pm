
from enum import IntEnum, auto

#Events generated by MPTCP:
#  - MPTCP_EVENT_CREATED: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                         sport, dport
#      A new connection has been created.
#
#  - MPTCP_EVENT_ESTABLISHED: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                             sport, dport
#      A connection is established (can start new subflows).
#
#  - MPTCP_EVENT_CLOSED: token
#      A connection has stopped.
#
#  - MPTCP_EVENT_ANNOUNCED: token, rem_id, family, daddr4 | daddr6 [, dport]
#      A new address has been announced by the peer.
#
#  - MPTCP_EVENT_REMOVED: token, rem_id
#      An address has been lost by the peer.
#
#  - MPTCP_EVENT_SUB_CREATED: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                             sport, dport, backup, if_idx [, error]
#      A new subflow has been created. 'error' should not be set.
#
#  - MPTCP_EVENT_SUB_ESTABLISHED: token, family, saddr4 | saddr6,
#                                 daddr4 | daddr6, sport, dport, backup,
#                                 if_idx [, error]
#      A new subflow has been established. 'error' should not be set.
#
#  - MPTCP_EVENT_SUB_CLOSED: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                            sport, dport, backup, if_idx [, error]
#      A subflow has been closed. An error (copy of sk_error) can be set.
#
#  - MPTCP_EVENT_SUB_PRIORITY: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                              sport, dport, backup, if_idx [, error]
#      The priority of a subflow has changed. 'error' should not be set.
#
#  - MPTCP_EVENT_SUB_ERROR: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                           sport, dport, backup, if_idx, error
#      A subflow got an error. Note that in case of error
#      'MPTCP_EVENT_SUB_CLOSED' event will also be produced with an error.
#
#Commands for MPTCP:
#  - MPTCP_CMD_ANNOUNCE: token, loc_id, family, saddr4 | saddr6 [, sport]
#      Announce a new address to the peer.
#
#  - MPTCP_CMD_REMOVE: token, loc_id
#      Announce that an address has been lost to the peer.
#
#  - MPTCP_CMD_SUB_CREATE: token, family, loc_id, rem_id, [saddr4 | saddr6,
#                          daddr4 | daddr6, dport [, sport, backup, if_idx]]
#      Create a new subflow.
#
#  - MPTCP_CMD_SUB_DESTROY: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                           sport, dport
#      Close a subflow.
#
#  - MPTCP_CMD_SUB_PRIORITY: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                            sport, dport, backup
#      Change the priority of a subflow.
#
#  - MPTCP_CMD_RESET: token,
#      Reset the connection.
#
#  - MPTCP_CMD_SET_FILTER: flags
#      Set the filter on events. Set MPTCPF_* flags to only receive specific
#      events. Default is to receive all events.
#
#  - MPTCP_CMD_SUB_TIMEOUT: token, family, saddr4 | saddr6, daddr4 | daddr6,
#                            sport, dport, timeout
#      Change the timeout (TCP_USER_TIMEOUT) used for a subflow.
#
#  - MPTCP_CMD_DUMP: None
#      Dump the state of the kernel. Only the DUMP functionality is accepted.
#      This will generate Netlink messages for the following events:
#        * MPTCP_EVENT_CREATED
#        * MPTCP_EVENT_SUB_CREATED
#
#  - MPTCP_CMD_EXIST: token
#      Check if this token is linked to an existing socket.
#


# ADDITITIONS TO ALLOW for monitoring connections
#  - MPTCP_CMD_MONITOR: token, interval
#      Check if this token is linked to an existing socket.
#  - MPTCP_EVENT_MONITOR: token
#      Check if this token is linked to an existing socket.

# EVENT and commands
class Commands(IntEnum):
    MPTCP_CMD_UNSPEC = 0
    MPTCP_EVENT_CREATED = 1
    MPTCP_EVENT_ESTABLISHED = auto()
    MPTCP_EVENT_CLOSED = auto()

    MPTCP_CMD_ANNOUNCE = auto()
    MPTCP_CMD_REMOVE = auto()
    MPTCP_EVENT_ANNOUNCED = auto()
    MPTCP_EVENT_REMOVED = auto()

    MPTCP_CMD_SUB_CREATE = auto()
    MPTCP_CMD_SUB_DESTROY = auto()
    MPTCP_EVENT_SUB_CREATED = auto()
    MPTCP_EVENT_SUB_ESTABLISHED = auto()
    MPTCP_EVENT_SUB_CLOSED = auto()

    MPTCP_CMD_SUB_PRIORITY = auto()
    MPTCP_EVENT_SUB_PRIORITY = auto()

    MPTCP_CMD_RESET =  auto()
    MPTCP_CMD_SET_FILTER = auto()
    MPTCP_CMD_SUB_TIMEOUT = auto()
    MPTCP_CMD_DUMP = auto()
    MPTCP_CMD_EXIST = auto()
    MPTCP_EVENT_SUB_ERROR = auto()

    # MONITORING ADDITIONS found in netlink_pm_monitor
    MPTCP_CMD_MONITOR = auto()
    MPTCP_EVENT_MONITOR = auto()

# ATTR types defined for MPTCP
class MptcpAttr(IntEnum):
    MPTCP_ATTR_UNSPEC = 0,

    MPTCP_ATTR_TOKEN = auto()       # u32 */
    MPTCP_ATTR_FAMILY = auto()      # u16 */
    MPTCP_ATTR_LOC_ID = auto()      # u8 */
    MPTCP_ATTR_REM_ID = auto()      # u8 */
    MPTCP_ATTR_SADDR4 = auto()      # u32 */
    MPTCP_ATTR_SADDR6 = auto()      # struct in6_addr */
    MPTCP_ATTR_DADDR4 = auto()      # u32 */
    MPTCP_ATTR_DADDR6 = auto()      # struct in6_addr */
    MPTCP_ATTR_SPORT = auto()       # u16 */
    MPTCP_ATTR_DPORT = auto()       # u16 */
    MPTCP_ATTR_BACKUP = auto()      # u8 */
    MPTCP_ATTR_ERROR = auto()       # u8 */
    MPTCP_ATTR_FLAGS = auto()       # u16 */
    MPTCP_ATTR_TIMEOUT = auto()     # u32 */
    MPTCP_ATTR_IF_IDX = auto()      # s32 */

        # remove
        # __MPTCP_ATTR_AFTER_LAST


